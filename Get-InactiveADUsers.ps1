param(

        [parameter(Mandatory=$true)]
        [ValidateNotNullOrEmpty()]
        [string]$Scope,

        [parameter(Mandatory=$true)]
        [ValidateNotNullOrEmpty()]
        [string]$CustomerEmailAddress,

        [parameter(Mandatory=$true)]
        [ValidateNotNullOrEmpty()]
        [string]$SendGridUser,

        [parameter(Mandatory=$true)]
        [ValidateNotNullOrEmpty()]
        [string]$SendGridPassword,

        [parameter(Mandatory=$true)]
        [ValidateNotNullOrEmpty()]
        [string]$SendGridFromAddress

)

Import-Module activedirectory

[array]$Users = Search-ADAccount -AccountInactive -TimeSpan "90" -UsersOnly -SearchBase $Scope | select DistinguishedName,Enabled,LastLogonDate,SamAccountName,UserPrincipalName
[array]$EnabledUsers = ''
foreach($user in $Users) {

    if($User.Enabled -eq 'True') { $EnabledUsers += $User }

}
$UsersDataTable = New-Object -TypeName System.Data.DataTable "Users who have not logged in for 90 days or more"
$UsersDataTable.Columns.Add("SamAccountName") | Out-Null
$UsersDataTable.Columns.Add("Enabled") | Out-Null
$UsersDataTable.Columns.Add("LastLogonDate") | Out-Null
$UsersDataTable.Columns.Add("UserPrinicipalName") | Out-Null
$UsersDataTable.Columns.Add("DistinguishedName") | Out-Null
foreach($EnabledUser in $EnabledUsers) {

    $UsersDataTable.Rows.Add($EnabledUser.SamAccountname,$EnabledUser.Enabled,$EnabledUser.LastLogonDate,$EnabledUser.UserPrincipalName,$EnabledUser.DistinguishedName)

}

# Build the Email notification
$subject = $env:USERDNSDOMAIN + ' inactive users report'

# Format the HTML
$html = $('Hello ' + $CustomerEmailAddress + ',<br><br>')
$html += 'Below is a report of users who have not logged in for 90 days. This is an automated report generated by the system, which raises a ticket with our support desk. Our support agents will be in touch to review the accounts with you.</b><br><br>'
$html += 'We would suggest the below user accounts are disabled, if they are no longer required.<br><br>'
$html += '<table><tr><td><b>UserName</td><td><b>Account Enabled?</td><td><b>Last Logon Date</td><td><b>User Prinicpal Name</td><td><b>Distinguished Name</td></tr>'
foreach ($row in $UsersDataTable) { 
        
        $html += "<tr><td>" + $row[0] + "</td><td>" + $row[1] + "</td><td>" + $row[2] + "</td><td>" + $row[3] + "</td><td>" + $row[4] + "</td></tr>"

}
$html += '</table>'


 # Email to us
$Username = $SendGridUser
$Password = ConvertTo-SecureString $SendGridPassword -AsPlainText -Force
$sendgridcredential = New-Object System.Management.Automation.PSCredential $Username, $Password
Send-MailMessage -From $SendGridFromAddress -To $CustomerEmailAddress -SmtpServer "smtp.sendgrid.net" -Subject "$subject" -UseSsl -Port 587 -Credential $sendgridcredential -Body $html -BodyAsHtml
